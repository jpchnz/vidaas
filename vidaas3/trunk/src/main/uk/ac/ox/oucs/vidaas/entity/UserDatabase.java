package uk.ac.ox.oucs.vidaas.entity;

// Generated 01-Aug-2011 14:49:06 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * UserDatabase generated by hbm2java
 */
@Entity
@Table(name = "user_database", catalog = "vidaas_v3")
@NamedQueries({
    @NamedQuery(name = "UserDatabase.findAll", query = "SELECT u FROM UserDatabase u"),
    @NamedQuery(name = "UserDatabase.findByDatabaseID", query = "SELECT u FROM UserDatabase u WHERE u.id.databaseId = :databaseID"),
    @NamedQuery(name = "UserDatabase.findByUserID", query = "SELECT u FROM UserDatabase u WHERE u.id.userId = :userID"),
    @NamedQuery(name = "UserDatabase.findByUserRole", query = "SELECT u FROM UserDatabase u WHERE u.userRole = :userRole")})
public class UserDatabase implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5464838369600700453L;
	private UserDatabaseId id;
	private Users users;
	private ProjectDatabase projectDatabase;
	private String userRole;

	public UserDatabase() {
	}

	public UserDatabase(UserDatabaseId id, Users users,
			ProjectDatabase projectDatabase, String userRole) {
		this.id = id;
		this.users = users;
		this.projectDatabase = projectDatabase;
		this.userRole = userRole;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "databaseId", column = @Column(name = "Database_ID", nullable = false)),
			@AttributeOverride(name = "userId", column = @Column(name = "User_ID", nullable = false)) })
	@NotNull
	public UserDatabaseId getId() {
		return this.id;
	}

	public void setId(UserDatabaseId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "User_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Database_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	public ProjectDatabase getProjectDatabase() {
		return this.projectDatabase;
	}

	public void setProjectDatabase(ProjectDatabase projectDatabase) {
		this.projectDatabase = projectDatabase;
	}

	@Column(name = "User_Role", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getUserRole() {
		return this.userRole;
	}

	public void setUserRole(String userRole) {
		this.userRole = userRole;
	}

}
