package uk.ac.ox.oucs.vidaas.entity;

// Generated 01-Aug-2011 14:49:06 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.NotNull;

/**
 * SchemaLog generated by hbm2java
 */
@Entity
@Table(name = "schema_log", catalog = "vidaas_v3")
@NamedQueries({
    @NamedQuery(name = "SchemaLog.findAll", query = "SELECT s FROM SchemaLog s"),
    @NamedQuery(name = "SchemaLog.findByStructureID", query = "SELECT s FROM SchemaLog s WHERE s.id.structureId = :structureID"),
    @NamedQuery(name = "SchemaLog.findByUserID", query = "SELECT s FROM SchemaLog s WHERE s.id.userId = :userID"),
    @NamedQuery(name = "SchemaLog.findByChangeDate", query = "SELECT s FROM SchemaLog s WHERE s.changeDate = :changeDate"),
    @NamedQuery(name = "SchemaLog.findByChangeLog", query = "SELECT s FROM SchemaLog s WHERE s.changeLog = :changeLog")})
public class SchemaLog implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6382329377039203463L;
	private SchemaLogId id;
	private Users users;
	private DatabaseStructure databaseStructure;
	private Date changeDate;
	private String changeLog;

	public SchemaLog() {
	}

	public SchemaLog(SchemaLogId id, Users users,
			DatabaseStructure databaseStructure, Date changeDate,
			String changeLog) {
		this.id = id;
		this.users = users;
		this.databaseStructure = databaseStructure;
		this.changeDate = changeDate;
		this.changeLog = changeLog;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "structureId", column = @Column(name = "Structure_ID", nullable = false)),
			@AttributeOverride(name = "userId", column = @Column(name = "User_ID", nullable = false)) })
	@NotNull
	public SchemaLogId getId() {
		return this.id;
	}

	public void setId(SchemaLogId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "User_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Structure_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DatabaseStructure getDatabaseStructure() {
		return this.databaseStructure;
	}

	public void setDatabaseStructure(DatabaseStructure databaseStructure) {
		this.databaseStructure = databaseStructure;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Change_Date", nullable = false, length = 10)
	@NotNull
	public Date getChangeDate() {
		return this.changeDate;
	}

	public void setChangeDate(Date changeDate) {
		this.changeDate = changeDate;
	}

	@Column(name = "Change_Log", nullable = false)
	@NotNull
	public String getChangeLog() {
		return this.changeLog;
	}

	public void setChangeLog(String changeLog) {
		this.changeLog = changeLog;
	}

}
